{
  "name": "Neo4jSinkConnectorVisits_Create",
  "config": {
    "connector.class": "streams.kafka.connect.sink.Neo4jSinkConnector",
    "tasks.max": "1",
    "errors.retry.timeout": "-1",
    "errors.retry.delay.max.ms": "1000",
    "errors.tolerance": "all",
    "errors.log.enable": "true",
    "errors.log.include.messages": "true",
    "topics": "mirea.public.visits",
    "neo4j.authentication.basic.username": "neo4j",
    "neo4j.authentication.basic.password": "2517Pass!Part",
    "neo4j.server.uri": "bolt://neo4j:7687",
    "neo4j.encryption.enabled": "false",
    "neo4j.topic.cypher.mirea.public.visits": "WITH event WHERE event.op = 'c' MERGE (v:Visit {id: event.after.id}) ON CREATE SET v.student_id = event.after.student_id, v.was = event.after.was, v.timestamp_id = event.after.timestamp_id ON MATCH SET v.student_id = event.after.student_id, v.was = event.after.was, v.timestamp_id = event.after.timestamp_id WITH v, event MATCH (s:Student {id: v.student_id}), (t:Timestamps {id: v.timestamp_id}) MERGE (s)-[:HAS_VISIT]->(v)<-[:HAS_VISIT]-(t)"
  }
}
